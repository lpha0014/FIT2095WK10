{"version":3,"sources":["./src/app/actor/actor.component.ts","./src/app/actor/actor.component.html","./src/app/deleteactor/deleteactor.component.ts","./src/app/deleteactor/deleteactor.component.html","./src/app/addactortomovie/addactortomovie.component.ts","./src/app/addactortomovie/addactortomovie.component.html","./src/environments/environment.ts","./src/app/listactors/listactors.component.ts","./src/app/listactors/listactors.component.html","./src/app/addmovie/addmovie.component.ts","./src/app/addmovie/addmovie.component.html","./src/app/updateactor/updateactor.component.ts","./src/app/updateactor/updateactor.component.html","./src/app/viewnotfound/viewnotfound.component.ts","./src/app/viewnotfound/viewnotfound.component.html","./src/app/addactor/addactor.component.ts","./src/app/addactor/addactor.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/database.service.ts","./src/app/deletemovie/deletemovie.component.ts","./src/app/deletemovie/deletemovie.component.html","./src/app/movie/movie.component.ts","./src/app/movie/movie.component.html","./src/app/listmovies/listmovies.component.ts","./src/app/listmovies/listmovies.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\n@Component({\n  selector: \"app-actor\",\n  templateUrl: \"./actor.component.html\",\n  styleUrls: [\"./actor.component.css\"],\n})\nexport class ActorComponent implements OnInit {\n  actorsDB: any[] = [];\n  section = 1;\n  fullName: string = \"\";\n  bYear: number = 0;\n  actorId: string = \"\";\n  constructor(private dbService: DatabaseService) {}\n  //Get all Actors\n  onGetActors() {\n    this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n  //Create a new Actor, POST request\n  onSaveActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.createActor(obj).subscribe(result => {\n      this.onGetActors();\n    });\n  }\n  // Update an Actor\n  onSelectUpdate(item) {\n    this.fullName = item.name;\n    this.bYear = item.bYear;\n    this.actorId = item._id;\n  }\n  onUpdateActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.updateActor(this.actorId, obj).subscribe(result => {\n      this.onGetActors();\n    });\n  }\n  //Delete Actor\n  onDeleteActor(item) {\n    this.dbService.deleteActor(item._id).subscribe(result => {\n      this.onGetActors();\n    });\n  }\n  // This lifecycle callback function will be invoked with the component get initialized by Angular.\n  ngOnInit() {\n    this.onGetActors();\n  }\n  changeSection(sectionId) {\n    this.section = sectionId;\n    this.resetValues();\n  }\n  resetValues() {\n    this.fullName = \"\";\n    this.bYear = 0;\n    this.actorId = \"\";\n  }\n}","<div class=\"jumbotron text-center\">\n    <h1>Actors DB System</h1>\n  </div>\n  <!-- The navigation bar -->\n  <nav class=\"navbar navbar-expand-sm bg-light\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\" style=\"padding-left:0.2in\">\n        <a class=\"btn btn-primary\" (click)=\"changeSection(1)\">Home</a>\n      </li>\n      <li class=\"nav-item\" style=\"padding-left:0.2in\">\n        <a class=\"btn btn-primary\" (click)=\"changeSection(2)\">Add Actor</a>\n      </li>\n      <li class=\"nav-item\" style=\"padding-left:0.2in\">\n        <a class=\"btn btn-primary\" (click)=\"changeSection(3)\">Update Actor</a>\n      </li>\n      <li class=\"nav-item\" style=\"padding-left:0.2in\">\n        <a class=\"btn btn-primary\" (click)=\"changeSection(4)\">Delete Actor</a>\n      </li>\n    </ul>\n  </nav>\n  <!-- First section: Display all in a tble -->\n  <div class=\"section\" *ngIf=\"section==1\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n      </tr>\n    </table>\n  </div>\n  <!-- Second Section: Add new actor -->\n  <div class=\"section\" *ngIf=\"section==2\">\n    <div class=\"form-group\">\n      <label for=\"actorName\">Full Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"fullName\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"actorName\">Birth Year</label>\n      <input type=\"number\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"bYear\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSaveActor()\">Save Actor</button>\n  </div>\n  <!-- Section 3: Update actor -->\n  <div class=\"section\" *ngIf=\"section==3\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n        <th>Select!</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSelectUpdate(item)\">Update</button></td>\n      </tr>\n    </table>\n    <hr>\n    <div *ngIf=\"actorsDB.length>0\">\n      <div class=\"form-group\">\n        <label for=\"actorName\">Full Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"fullName\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"actorName\">Birth Year</label>\n        <input type=\"number\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"bYear\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onUpdateActor()\">Update Actor</button>\n    </div>\n  </div>\n  <!-- Section 4: Delete Actor -->\n  <div class=\"section\" *ngIf=\"section==4\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n        <th>Delete?</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onDeleteActor(item)\">Delete</button></td>\n      </tr>\n    </table>\n  </div>\n  ","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-deleteactor\",\n  templateUrl: \"./deleteactor.component.html\",\n  styleUrls: [\"./deleteactor.component.css\"],\n})\nexport class DeleteactorComponent implements OnInit {\n  actorsDB: any[] = [];\n  constructor(private dbService: DatabaseService, private router: Router) {}\n  //Get all Actors\n  onGetActors() {\n    console.log(\"From on GetActors\");\n    return this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n  //Delete Actor\n  onDeleteActor(item) {\n    this.dbService.deleteActor(item._id).subscribe(result => {\n      this.onGetActors();\n      this.router.navigate([\"/listactors\"]);\n    });\n  }\n  // This callback function will be invoked with the component get initialized by Angular.\n  ngOnInit() {\n    this.onGetActors();\n  }\n}","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n        <th>Delete?</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onDeleteActor(item)\">Delete</button></td>\n      </tr>\n    </table>\n  </div>","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-addactortomovie',\n  templateUrl: './addactortomovie.component.html',\n  styleUrls: ['./addactortomovie.component.css']\n})\nexport class AddactortomovieComponent implements OnInit {\n  actorsDB: any[] = [];\n  moviesDB: any[] = [];\n  movSelect =\"\"\n  actSelect=\"\"\n\n  constructor(private dbService: DatabaseService, private router: Router) { }\n  onGetMovies() {\n    this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n\n  onGetActors() {\n    this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n    onSelectActor(item) { \n      this.actSelect = item._id;\n    }\n    onSelectMovie(data) {\n      this.movSelect = data._id;\n    }\n\n    onAddActor() { //adding actor to movie\n      this.dbService.addExistAuthor(this.movSelect, this.actSelect).subscribe(result => {\n      this.onGetMovies();\n      });\n    }\n    onAddMovie() { //adding movie to actor\n        this.dbService.addExistMovie(this.actSelect, this.movSelect).subscribe(result => {\n        this.onGetMovies();\n        });\n  }\n  ngOnInit() {\n    this.onGetMovies();\n    this.onGetActors();\n  }\n\n}\n","<table class=\"table table-striped\">\n  <tr>\n    <th>Title</th>\n    <th>Year</th>\n    <th>Select</th>\n  </tr>\n  <tr *ngFor=\"let data of moviesDB\">\n    <td>{{data.title}}</td>\n    <td>{{data.year}}</td>\n    <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSelectMovie(data)\">Select</button></td>\n  </tr>\n</table>\n<table class=\"table table-striped\">\n  <tr>\n    <th>Name</th>\n    <th>Birth Year</th>\n    <th>Select</th>\n  </tr>\n  <tr *ngFor=\"let item of actorsDB\">\n    <td>{{item.name}}</td>\n    <td>{{item.bYear}}</td>\n    <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSelectActor(item)\">Select</button></td>\n  </tr>\n</table>\n<div *ngIf=\"moviesDB.length>0\">\n  <div class=\"form-group\">\n    <label for=\"movieId\">Movie ID</label>\n    <input type=\"text\" class=\"form-control\" id=\"movId\" [(ngModel)]=\"movSelect\">\n  </div>\n  <div *ngIf=\"actorsDB.length>0\" class=\"form-group\">\n    <label for=\"actorId\">Actor ID</label>\n    <input type=\"text\" class=\"form-control\" id=\"actId\" [(ngModel)]=\"actSelect\">\n  </div>\n  <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onAddActor()\">Add Actor to Movie</button></td>\n  <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onAddMovie()\">Add Movie to Actor</button></td>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\n@Component({\n  selector: \"app-listactors\",\n  templateUrl: \"./listactors.component.html\",\n  styleUrls: [\"./listactors.component.css\"],\n})\nexport class ListactorsComponent implements OnInit {\n  actorsDB: any[] = [];\n  constructor(private dbService: DatabaseService) {}\n  ngOnInit() {\n    console.log(\"Hi From ListActors ngIOnit\");\n    this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n}","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n      </tr>\n    </table>\n  </div>","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-addmovie\",\n  templateUrl: \"./addmovie.component.html\",\n  styleUrls: [\"./addmovie.component.css\"],\n})\nexport class AddmovieComponent {\n  title: string = \"\";\n  year: number = 0;\n  moviesDB: any[] = [];\n  constructor(private dbService: DatabaseService, private router: Router) {}\n  onGetMovies() {\n    this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n\n  onSaveMovie() {\n    let obj = { title: this.title, year: this.year };\n    this.dbService.createMovies(obj).subscribe(result => {\n      this.onGetMovies();\n      this.router.navigate([\"/listmovies\"]);\n    });\n  }\n}","<div class=\"section\">\n    <div class=\"form-group\">\n      <label for=\"movieName\">Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"movieName\" [(ngModel)]=\"title\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"movieYear\">Year</label>\n      <input type=\"number\" class=\"form-control\" id=\"movieYear\" [(ngModel)]=\"year\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSaveMovie()\">Save Movie</button>\n  </div>","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-updateactor\",\n  templateUrl: \"./updateactor.component.html\",\n  styleUrls: [\"./updateactor.component.css\"],\n})\nexport class UpdateactorComponent implements OnInit {\n  fullName: string = \"\";\n  bYear: number = 0;\n  actorId: string = \"\";\n  actorsDB: any[] = [];\n  constructor(private dbService: DatabaseService, private router: Router) {}\n  //Get all Actors\n  onGetActors() {\n    console.log(\"From on GetActors\");\n    return this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n  // Update an Actor\n  onSelectUpdate(item) {\n    this.fullName = item.name;\n    this.bYear = item.bYear;\n    this.actorId = item._id;\n  }\n  onUpdateActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.updateActor(this.actorId, obj).subscribe(result => {\n      this.onGetActors();\n      this.router.navigate([\"/listactors\"]);\n    });\n  }\n  ngOnInit() {\n    this.onGetActors();\n  }\n}","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n        <th>Select!</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSelectUpdate(item)\">Update</button></td>\n      </tr>\n    </table>\n    <hr>\n    <div *ngIf=\"actorsDB.length>0\">\n      <div class=\"form-group\">\n        <label for=\"actorName\">Full Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"fullName\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"actorName\">Birth Year</label>\n        <input type=\"number\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"bYear\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onUpdateActor()\">Update Actor</button>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-viewnotfound',\n  templateUrl: './viewnotfound.component.html',\n  styleUrls: ['./viewnotfound.component.css']\n})\nexport class ViewnotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  \n\n}\n","<p>View not found !!!</p>\n","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-addactor\",\n  templateUrl: \"./addactor.component.html\",\n  styleUrls: [\"./addactor.component.css\"],\n})\nexport class AddactorComponent {\n  fullName: string = \"\";\n  bYear: number = 0;\n  actorId: string = \"\";\n  constructor(private dbService: DatabaseService, private router: Router) {}\n  onSaveActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.createActor(obj).subscribe(result => {\n      this.router.navigate([\"/listactors\"]);\n    });\n  }\n}","<div class=\"section\">\n    <div class=\"form-group\">\n      <label for=\"actorName\">Full Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"fullName\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"actorName\">Birth Year</label>\n      <input type=\"number\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"bYear\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSaveActor()\">Save Actor</button>\n  </div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'movieAng';\n}\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n    <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/listactors\" routerLinkActive=\"active\">List Actors</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/addactor\" routerLinkActive=\"active\">Add Actors</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/updateactor\" routerLinkActive=\"active\">Update Actors</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/deleteactor\" routerLinkActive=\"active\">Delete Actors</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/listmovies\" routerLinkActive=\"active\">List Movies</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/addmovie\" routerLinkActive=\"active\">Add Movies</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/deletemovie\" routerLinkActive=\"active\">Delete Movies</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/addactortomovie\" routerLinkActive=\"active\">Add actor to Movie</a>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n<router-outlet></router-outlet>","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { AppComponent } from \"./app.component\";\nimport { ActorComponent } from \"./actor/actor.component\";\nimport { DatabaseService } from \"./database.service\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MovieComponent } from './movie/movie.component';\nimport { ListactorsComponent } from './listactors/listactors.component';\nimport { AddactorComponent } from './addactor/addactor.component';\nimport { UpdateactorComponent } from './updateactor/updateactor.component';\nimport { DeleteactorComponent } from './deleteactor/deleteactor.component';\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { ListmoviesComponent } from './listmovies/listmovies.component';\nimport { AddmovieComponent } from './addmovie/addmovie.component';\nimport { DeletemovieComponent } from './deletemovie/deletemovie.component';\nimport { AddactortomovieComponent } from './addactortomovie/addactortomovie.component';\nimport { ViewnotfoundComponent } from './viewnotfound/viewnotfound.component';\n\nconst appRoutes: Routes = [\n  { path: \"listactors\", component: ListactorsComponent },\n  { path: \"addactor\", component: AddactorComponent },\n  { path: \"updateactor\", component: UpdateactorComponent },\n  { path: \"deleteactor\", component: DeleteactorComponent },\n  { path: \"listmovies\", component: ListmoviesComponent },\n  { path: \"addmovie\", component: AddmovieComponent },\n  { path: \"deletemovie\", component: DeletemovieComponent },\n  { path: \"addactortomovie\", component: AddactortomovieComponent },\n  { path: \"viewnotfound\", component: ViewnotfoundComponent },\n  { path: \"\", redirectTo: \"/listactors\", pathMatch: \"full\" },\n  {path: '**', component: ViewnotfoundComponent}\n];\nRouterModule.forRoot(appRoutes)\n\n@NgModule({\n  declarations: [AppComponent, ActorComponent, MovieComponent, ListactorsComponent, AddactorComponent, UpdateactorComponent, DeleteactorComponent, ListmoviesComponent, AddmovieComponent, DeletemovieComponent, AddactortomovieComponent, ViewnotfoundComponent],\n  imports: [ RouterModule.forRoot(appRoutes, {useHash:true}), BrowserModule, HttpClientModule, FormsModule],\n  providers: [DatabaseService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n};\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DatabaseService {\n  constructor(private http: HttpClient) {}\n  result: any;\n  getActors() {\n    return this.http.get(\"/actors\");\n  }\n  getActor(id: string) {\n    let url = \"/actors/\" + id;\n    return this.http.get(url);\n  }\n  createActor(data) {\n    return this.http.post(\"/actors\", data, httpOptions);\n  }\n  updateMovie(id, data) {\n    let url = \"/actors/\" + id;\n    return this.http.put(url, data, httpOptions);\n  }\n  deleteMovie(id) {\n    let url = \"/movies/\" + id;\n    return this.http.delete(url, httpOptions);\n  }\n  deleteaYear(id) {\n    let url = \"/moviesaYear/\" + id;\n    return this.http.delete(url, httpOptions);\n  }\n  \n  getMovies() {\n    return this.http.get(\"/movies\");\n  }\n  getMovie(id: string) {\n    let url = \"/movies/\" + id;\n    return this.http.get(url);\n  }\n  createMovies(data) {\n    return this.http.post(\"/movies\", data, httpOptions);\n  }\n  updateActor(id, data) {\n    let url = \"/movies/\" + id;\n    return this.http.put(url, data, httpOptions);\n  }\n  deleteActor(id) {\n    let url = \"/movies/\" + id;\n    return this.http.delete(url, httpOptions);\n  }\n  onDeleteaYear(ayear) { //qn3\n    let url = \"/removeayear/\" + ayear;\n    return this.http.delete(url, httpOptions);\n  }\n\n  addExistAuthor(mId,aId) { //qn4\n    let url = \"/movie/\" + mId + \"/\" + aId;\n    return this.http.post(url, httpOptions);\n  }\n  // app.post('/actor/:mId/:aId', actors.addExistMovie) //to add a movie - qn4\n  addExistMovie(aId,mId) { //qn4\n    let url = \"/actor/\" + aId + \"/\" + mId;\n    return this.http.post(url, httpOptions);\n  }\n\n  errorpg(){\n    let url = \"/viewnotfound/\";\n    return this.http.post(url, httpOptions);\n  }\n}","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-deletemovie\",\n  templateUrl: \"./deletemovie.component.html\",\n  styleUrls: [\"./deletemovie.component.css\"],\n})\nexport class DeletemovieComponent implements OnInit {\n  moviesDB: any[] = [];\n  constructor(private dbService: DatabaseService, private router: Router) {}\n  //Get all Movies\n  onGetMovies() {\n    console.log(\"From on GetMovies\");\n    return this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n  //Delete Movie\n  onDeleteMovie(item) {\n    this.dbService.deleteMovie(item._id).subscribe(result => {\n      this.onGetMovies();\n      this.router.navigate([\"/listmovies\"]);\n    });\n  }\n  // This callback function will be invoked with the component get initialized by Angular.\n  ngOnInit() {\n    this.onGetMovies();\n  }\n}","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Year</th>\n        <th>Delete?</th>\n      </tr>\n      <tr *ngFor=\"let item of moviesDB\">\n        <td>{{item.title}}</td>\n        <td>{{item.year}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onDeleteMovie(item)\">Delete</button></td>\n      </tr>\n    </table>\n  </div>","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\n\n@Component({\n  selector: \"app-movie\",\n  templateUrl: \"./movie.component.html\",\n  styleUrls: [\"./movie.component.css\"],\n})\nexport class MovieComponent implements OnInit {\n  moviesDB: any[] = [];\n  section = 1;\n\n  title: string = \"\";\n  year: number = 0;\n  actors = [];\n  movieId: string = \"\";\n  ayear: number = 0;\n  actorsDB: any[] = [];\n  mId: any[] = [];\n  aId: any[] = [];\n  movSelect =\"\"\n  actSelect=\"\"\n  name: string = \"\";\n  bYear: number = 0;\n\n  constructor(private dbService: DatabaseService) {}\n\n  //Get all Movies\n  onGetMovies() {\n    this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n  //Create a new Movie, POST request\n  onSaveMovie() {\n    let obj = { title: this.title, year: this.year};\n    this.dbService.createMovies(obj).subscribe(result => {\n      this.changeSection(7)\n      this.changeSection(1)\n      this.onGetMovies();\n    });\n  }\n  // Update a Movie - NOT NEEDED\n  onSelectUpdate(item) {\n    this.title = item.title;\n    this.year = item.year;\n    this.actors.push(item._id);\n  }\n\n  onUpdateMovie() {\n    let obj = { title: this.title, year: this.year };\n    this.dbService.updateMovie(this.movieId, obj).subscribe(result => {\n      this.onGetMovies();\n    });\n  }\n\n  //Delete Movie - Q2 lab\n  onDeleteMovie(item) {\n    this.dbService.deleteMovie(item._id).subscribe(result => {\n      this.onGetMovies();\n    });\n  }\n\n    //Delete Movie Q3 lab\n    onDeleteaYear() { //qn3\n      this.dbService.onDeleteaYear(this.ayear).subscribe(result => {\n        this.onGetMovies();\n      });\n    }\n//qn4\n  onGetActors() {\n    this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n\n    onSelectActor(item) { \n      this.actSelect = item._id;\n    }\n    onSelectMovie(data) {\n      this.movSelect = data._id;\n    }\n\n    onAddActor() { //adding actor to movie\n      this.dbService.addExistAuthor(this.movSelect, this.actSelect).subscribe(result => {\n      this.onGetMovies();\n      });\n    }\n    onAddMovie() { //adding movie to actor\n        this.dbService.addExistMovie(this.actSelect, this.movSelect).subscribe(result => {\n        this.onGetMovies();\n        });\n  }\n\n// This lifecycle callback function will be invoked with the component get initialized by Angular.\n  ngOnInit() {\n    this.onGetMovies();\n    this.onGetActors();\n  }\n\n  changeSection(sectionId) {\n    this.section = sectionId;\n    this.resetValues();\n  }\n\n  resetValues() {\n    this.title = \"\";\n    this.year = 0;\n    this.actors = [];\n  }\n}","<div class=\"jumbotron text-center\">\n    <h1>Movies DB System</h1>\n  </div>\n  <!-- The navigation bar -->\n  <nav class=\"navbar navbar-expand-sm bg-light\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\" style=\"padding-left:0.2in\">\n        <a class=\"btn btn-primary\" (click)=\"changeSection(1)\">Home</a>\n      </li>\n      <li class=\"nav-item\" style=\"padding-left:0.2in\">\n        <a class=\"btn btn-primary\" (click)=\"changeSection(2)\">Add Movie</a>\n      </li>\n      <li class=\"nav-item\" style=\"padding-left:0.2in\">\n        <a class=\"btn btn-primary\" (click)=\"changeSection(3)\">Update Movie</a>\n      </li>\n      <li class=\"nav-item\" style=\"padding-left:0.2in\">\n        <a class=\"btn btn-primary\" (click)=\"changeSection(4)\">Delete Movie</a>\n      </li>\n      <li class=\"nav-item\" style=\"padding-left:0.2in\">\n        <a class=\"btn btn-primary\" (click)=\"changeSection(5)\">Delete aYear</a>\n      </li>\n      <li class=\"nav-item\" style=\"padding-left:0.2in\">\n        <a class=\"btn btn-primary\" (click)=\"changeSection(6)\">Add Actor to Movie</a>\n      </li>\n      <li class=\"nav-item\" style=\"padding-left:0.2in\">\n        <a class=\"btn btn-primary\" (click)=\"changeSection(7)\">Show Movies</a>\n      </li>\n    </ul>\n  </nav>\n  <!-- First section: Display all in a tble -->\n  <div class=\"section\" *ngIf=\"section==1\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Title</th>\n        <th>Year</th>\n        <th>Actors</th>\n      </tr>\n      <tr *ngFor=\"let item of moviesDB\">\n        <td>{{item.title}}</td>\n        <td>{{item.year}}</td>\n        <td><ul style=\"list-style-type:none\" *ngFor=\"let a of item.actors; index as i\">\n          <li>{{item.actors[i].name}}</li>\n          </ul>\n        </td>\n      </tr>\n    </table>\n  </div>\n  <!-- Second Section: Add new movie -->\n  <div class=\"section\" *ngIf=\"section==2\">\n    <div class=\"form-group\">\n      <label for=\"movieName\">Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"movieName\" [(ngModel)]=\"title\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"movieName\">Year</label>\n      <input type=\"number\" class=\"form-control\" id=\"movieName\" [(ngModel)]=\"year\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSaveMovie()\">Save Movie</button>\n  </div>\n  <!-- Section 3: Update actor -->\n  <div class=\"section\" *ngIf=\"section==3\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Title</th>\n        <th>Year</th>\n        <th>Select!</th>\n      </tr>\n      <tr *ngFor=\"let item of moviesDB\">\n        <td>{{item.title}}</td>\n        <td>{{item.year}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSelectUpdate(item)\">Update</button></td>\n      </tr>\n    </table>\n    <hr>\n    <div *ngIf=\"moviesDB.length>0\">\n      <div class=\"form-group\">\n        <label for=\"movieName\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"movieName\" [(ngModel)]=\"title\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"movieName\">Year</label>\n        <input type=\"number\" class=\"form-control\" id=\"movieName\" [(ngModel)]=\"year\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onUpdateMovie()\">Update Movie</button>\n    </div>\n  </div>\n  <!-- Section 4: Delete Actor -->\n  <div class=\"section\" *ngIf=\"section==4\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Title</th>\n        <th>Year</th>\n        <th>Delete?</th>\n      </tr>\n      <tr *ngFor=\"let item of moviesDB\">\n        <td>{{item.title}}</td>\n        <td>{{item.year}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onDeleteMovie(item)\">Delete</button></td>\n      </tr>\n    </table>\n  </div>\n  <div class=\"section\" *ngIf=\"section==5\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Year</th>\n      </tr>\n        <input type=\"number\" class=\"form-control\" id=\"ayear\" name=\"ayear\" [(ngModel)]=\"ayear\">\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onDeleteaYear(ayear)\">Delete</button>\n    </table>\n  </div>\n  <div class=\"section\" *ngIf=\"section==6\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Title</th>\n        <th>Year</th>\n        <th>Select</th>\n      </tr>\n      <tr *ngFor=\"let data of moviesDB\">\n        <td>{{data.title}}</td>\n        <td>{{data.year}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSelectMovie(data)\">Select</button></td>\n      </tr>\n    </table>\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n        <th>Select</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSelectActor(item)\">Select</button></td>\n      </tr>\n    </table>\n    <div *ngIf=\"moviesDB.length>0\">\n      <div class=\"form-group\">\n        <label for=\"movieId\">Movie ID</label>\n        <input type=\"text\" class=\"form-control\" id=\"movId\" [(ngModel)]=\"movSelect\">\n      </div>\n      <div *ngIf=\"actorsDB.length>0\" class=\"form-group\">\n        <label for=\"actorId\">Actor ID</label>\n        <input type=\"text\" class=\"form-control\" id=\"actId\" [(ngModel)]=\"actSelect\">\n      </div>\n      <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onAddActor()\">Add Actor to Movie</button></td>\n      <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onAddMovie()\">Add Movie to Actor</button></td>\n  </div>\n  </div>\n\n  <div class=\"section\" *ngIf=\"section==7\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Title</th>\n        <th>Year</th>\n        <th>Actors</th>\n      </tr>\n      <tr *ngFor=\"let item of moviesDB\">\n        <td>{{item.title}}</td>\n        <td>{{item.year}}</td>\n        <td><ul style=\"list-style-type:none\" *ngFor=\"let a of item.actors; index as i\">\n        <li>{{item.actors[i].name}}</li>\n        </ul>\n      </td>\n      </tr>\n    </table>","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\n@Component({\n  selector: \"app-listmovies\",\n  templateUrl: \"./listmovies.component.html\",\n  styleUrls: [\"./listmovies.component.css\"],\n})\nexport class ListmoviesComponent implements OnInit {\n  moviesDB: any[] = [];\n  constructor(private dbService: DatabaseService) {}\n  ngOnInit() {\n    console.log(\"Hi From ListMovies ngIOnit\");\n    this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n}","<div class=\"section\">\n    <table class=\"table table-striped\">\n        <tr>\n          <th>Title</th>\n          <th>Year</th>\n          <th>Actors</th>\n        </tr>\n        <tr *ngFor=\"let item of moviesDB\">\n          <td>{{item.title}}</td>\n          <td>{{item.year}}</td>\n          <td><ul style=\"list-style-type:none\" *ngFor=\"let a of item.actors; index as i\">\n          <li>{{item.actors[i].name}}</li>\n          </ul>\n        </td>\n        </tr>\n      </table>\n  </div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}